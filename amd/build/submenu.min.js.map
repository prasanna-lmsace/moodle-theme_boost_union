{"version":3,"file":"submenu.min.js","sources":["../src/submenu.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Theme Boost Union - Initializes and handles events of the sub menus in smart menu.\n *\n * @module     theme_boost_union/submenu\n * @copyright  2023 bdecent GmbH <https://bdecent.de>\n * @copyright  based on code from core/usermenu by Mihail Geshoski\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport {space, enter} from 'core/key_codes';\n\n/**\n * Smartmenu submenu constants.\n */\nconst Selectors = {\n    smartMenuCarousel: '[data-toggle=\"smartmenu-carousel\"]',\n    smartMenuCarouselClass: '.theme-boost-union-smartmenu-carousel',\n    smartMenuCarouselItem: '[data-toggle=\"smartmenu-carousel\"] .carousel-item',\n    smartMenuCarouselItemActive: '[data-toggle=\"smartmenu-carousel\"] .carousel-item.active',\n    smartMenuCarouselNavigationLink: '[data-toggle=\"smartmenu-carousel\"] .carousel-navigation-link',\n    moreMenuCarouselDropdown: '.theme-boost-union-moremenu-carousel .moremenu .dropdownmoremenu',\n    smartMenuDropDownItems: 'ul.dropdown-menu li.nav-item',\n    moreMenuCarousel: '.moremenu-carousel',\n    boostUnionMoreMenu: '.boost-union-moremenu',\n    carouselItem: '.carousel-item',\n    carouselMainItem: '#carousel-item-main',\n    carouselInner: '.carousel-inner',\n    dropDownMenu: '.dropdown-menu',\n    roleMenu: '[role=\"menu\"]',\n    attr: {\n        smartMenuCarouselTargetAttr: 'data-carousel-target-id',\n        smartMenuCarouselNavigationClass: 'carousel-navigation-link',\n        moreMenuCarousel: 'moremenu-carousel',\n    },\n    region: {\n        dropDown: '[data-region=\"moredropdown\"]'\n    }\n};\n\n\n/**\n * Register event listeners.\n *\n * @param {HTMLElement} smartMenu\n */\nconst registerEventListeners = (smartMenu) => {\n\n    // Handle click events in the smart menu.\n    smartMenu.addEventListener('click', (e) => {\n\n        // Handle click event on the carousel navigation (control) links in the smart menu.\n        if (e.target.matches(Selectors.smartMenuCarouselNavigationLink)) {\n            carouselManagement(e);\n        }\n\n    }, true);\n\n    smartMenu.addEventListener('keydown', e => {\n        // Handle keydown event on the carousel navigation (control) links in the smart menu.\n        if ((e.keyCode === space ||\n            e.keyCode === enter) &&\n            e.target.matches(Selectors.smartMenuCarouselNavigationLink)) {\n            e.preventDefault();\n            carouselManagement(e);\n        }\n    }, true);\n\n    /**\n     * We do the same actions here even if the caller was a click or button press.\n     *\n     * @param {Event} e The triggering element and key presses etc.\n     */\n    const carouselManagement = e => {\n\n        // By default the smart menu dropdown element closes on a click event. This behaviour is not desirable\n        // as we need to be able to navigate through the carousel items (submenus of the smart menu) within the\n        // smart menu. Therefore, we need to prevent the propagation of this event and then manually call the\n        // carousel transition.\n        e.stopPropagation();\n        // The id of the targeted carousel item.\n        const targetedCarouselItemId = e.target.dataset.carouselTargetId;\n        const targetedCarouselItem = smartMenu.querySelector('#' + targetedCarouselItemId);\n        // Get the position (index) of the targeted carousel item within the parent container element.\n        const index = Array.from(targetedCarouselItem.parentNode.children).indexOf(targetedCarouselItem);\n        // Navigate to the targeted carousel item.\n        $(smartMenu.querySelector(Selectors.smartMenuCarousel)).carousel(index);\n\n    };\n\n    // Handle the 'hide.bs.dropdown' event (Fired when the dropdown menu is being closed).\n    $(Selectors.smartMenu).on('hide.bs.dropdown', () => {\n        // Reset the state once the smart menu dropdown is closed and return back to the first (main) carousel item\n        // if necessary.\n        $(smartMenu.querySelector(Selectors.smartMenuCarousel)).carousel(0);\n    });\n\n    // Handle the 'slid.bs.carousel' event (Fired when the carousel has completed its slide transition).\n    $(Selectors.smartMenuCarousel).on('slid.bs.carousel', () => {\n        const activeCarouselItem = smartMenu.querySelector(Selectors.smartMenuCarouselItemActive);\n        // Set the focus on the newly activated carousel item.\n        activeCarouselItem.focus();\n    });\n};\n\n\n/**\n * Make the top level menus work as carousel when moved into more menu.\n * Clone the menu items from the moremenu dropdown menu and create a custom dropdown menu for carousel.\n */\nconst moreMenuItemCarousel = () => {\n\n    // Re-initializes the submenu carousel on window resize.\n    window.onresize = () => createMoreMenuCarousel();\n\n    /**\n     * Initialize the carousel functionality for parent-level menus moved into the more menu.\n     * Top-level dropdown items become first-level submenus when moved into the more menu.\n     * First and second-level submenus are displayed as carousels.\n     *\n     * This method initializes the carousel submenu functionality for the more menus of primary and menubar navigations.\n     */\n    const createMoreMenuCarousel = () => {\n        // Get the primary navigation more menu and initialize carousel submenu\n        var primaryNav = document.querySelector('.primary-navigation ul.more-nav .dropdownmoremenu');\n        carouselSubmenu(primaryNav);\n\n        // Get the menubar more menu and initialize carousel submenu\n        var menuBar = document.querySelector('nav.menubar ul.more-nav .dropdownmoremenu');\n        carouselSubmenu(menuBar);\n    };\n\n    /**\n     * Implements carousel functionality for submenus of more menu items.\n     *\n     * Retrieves the list of menus moved into the more menu and copies those items to a custom dropdown menu\n     * as part of the theme-boost-union-smartmenu-carousel. The items are placed into the first carousel item,\n     * and submenus from the menus are moved as separate carousel items. Each top-level menu contains a data attribute\n     * for the submenu's target-carousel-id.\n     *\n     * When the more menu is clicked, the original dropdown-menu is hidden,\n     * and the created smartmenu carousel dropdown-menu is shown.\n     *\n     * The visibility of the carousel dropdown changes based on the visibility class \"show\" of the original dropdowns.\n     *\n     * @param {HTMLElement} moreMenu The more menu element.\n     * @returns {void}\n     */\n    const carouselSubmenu = (moreMenu) => {\n\n        // Fetches the list of moved menu items from ul.dropdown-menu li.nav-items.\n        var items = moreMenu.querySelectorAll(Selectors.smartMenuDropDownItems);\n\n        if (items.length <= 0) {\n            return;\n        }\n\n        // Close the dropdown menu of the more menu to prevent faulty clicks on elements moved outside\n        // of the more menu during resizing.\n        if (moreMenu.querySelector(Selectors.dropDownMenu).classList.contains('show')) {\n            Array.from(moreMenu.querySelectorAll(Selectors.dropDownMenu)).forEach((e) => e.classList.remove('show'));\n        }\n\n        var mainmenus = [];\n        var submenus = [];\n\n        // Clone the items, move the submenu dropdown to separate carousel item.\n        items.forEach((item) => {\n\n            // Create a deep clone of the menu item node.\n            var menuItem = item.cloneNode(true);\n\n            // Check if the menu item contains any submenus.\n            if (menuItem.querySelector(Selectors.boostUnionMoreMenu) !== undefined\n                && menuItem.querySelectorAll(Selectors.carouselItem) !== null) {\n\n                // Fetch the list of submenu carousel items.\n                var carouselItems = menuItem.querySelectorAll(Selectors.carouselItem);\n\n                carouselItems.forEach((el) => {\n                    // Clone the submenu and remove it from the menu item to prevent misindexing of carousel items.\n                    var cloned = el.cloneNode(true);\n                    cloned.classList.remove('active'); // Ensure the main menu-based carousel item is active.\n                    submenus.push(cloned);\n                    el.remove(); // Remove the submenu from the cloned menu item.\n                });\n\n                // Check if the dropdown nav link of this item contains the data set of carousel target.\n                // Add the \"carousel-navigation-link\" class to move to the targeted submenu when this link is clicked.\n                if (menuItem.querySelector('a')\n                    && menuItem.querySelector('a').hasAttribute(Selectors.attr.smartMenuCarouselTargetAttr)) {\n                    menuItem.querySelector('a').classList.add(Selectors.attr.smartMenuCarouselNavigationClass);\n                }\n            }\n\n            // Add the cloned menu item to the main menu items array.\n            mainmenus.push(menuItem);\n        });\n\n        // Fetch the more menu carousel element within the current more menu.\n        var moreMenuCarousel = moreMenu.querySelector(Selectors.moreMenuCarousel);\n\n        // Check if the more menu carousel exists and contains the main carousel item.\n        if (moreMenuCarousel && moreMenuCarousel.querySelector(Selectors.carouselMainItem) !== null) {\n\n            var mainCarouselItem = moreMenuCarousel.querySelector(Selectors.carouselMainItem);\n            // Clear any previously created items from the main carousel item.\n            Array.from(mainCarouselItem.childNodes).forEach((e) => e.remove());\n            // Remove all carousel items except the main carousel item.\n            moreMenuCarousel.querySelectorAll(Selectors.carouselItem).forEach((m) => m.id == 'carousel-item-main' || m.remove());\n\n            // Append the current navigation items to the main carousel item.\n            mainmenus.forEach((e) => mainCarouselItem.appendChild(e));\n            mainCarouselItem.classList.add('active'); // Make the main carousel item as active.\n\n            // Append the submenu items to the carousel inner container.\n            submenus.forEach((sb) => moreMenuCarousel.querySelector(Selectors.carouselInner).appendChild(sb));\n        }\n    };\n\n};\n\n\n/**\n * Registers event listeners for showing and hiding dropdown menus within the parent menu of the dropdownmoremenu.\n *\n * When the 'shown' event is triggered, it shows the created carousel dropdown and hides the original dropdown-menu,\n * as the original dropdown menu doesn't show submenus.\n *\n * When the 'hidden' event is triggered, it hides the created carousel dropdown.\n *\n * Creates a click event listener for the card menus inside the moremenu, toggling their visibility on click.\n *\n * On visibility toggle, calculates the width of the card menu based on the document size and dropdown menu position.\n * Moves the position of card menus to the left or right based on the dropdown menu's position.\n */\nconst registerMoreMenuCarouselDropdown = () => {\n\n    // Find all moremenu elements.\n    var moreMenu = document.querySelectorAll(Selectors.moreMenuCarouselDropdown);\n\n    moreMenu.forEach((menu) => {\n\n        // Parent dropdown element of the menu item.\n        var parentMenu = menu.parentNode;\n\n        // Observe the 'shown' event of the dropdown.\n        $(parentMenu).on('shown.bs.dropdown', (e) => {\n\n            // Find the dropdown menu of the shown dropdown item.\n            var dropdown = e.relatedTarget.parentNode.querySelector(Selectors.dropDownMenu);\n            var moreMenuCarousel = dropdown.nextElementSibling;\n\n            // Check if the next element of the dropdown menu is moremenu carousel,\n            // And the class list contains the moremenu-carousel.\n            if (moreMenuCarousel && moreMenuCarousel.classList.contains(Selectors.attr.moreMenuCarousel)\n                && moreMenuCarousel.querySelector(Selectors.dropDownMenu) !== null) {\n\n                // Show the carousel dropdown menu.\n                moreMenuCarousel.querySelector(Selectors.dropDownMenu).classList.add('show');\n                dropdown.classList.add('hide-on-show'); // Hide the moodle core moremenus dropdown list.\n\n                // Toggle the card menus inside moremenu using click event listener.\n                const moreDropdown = moreMenuCarousel.querySelector(Selectors.region.dropDown);\n                moreDropdown.querySelectorAll('.dropdown').forEach((cardMenu) => {\n                    // Hide the shown card menus.\n                    cardMenu.querySelector(Selectors.roleMenu).classList.remove('show');\n                    cardMenu.removeEventListener('click', toggledropdown, true);\n                    cardMenu.addEventListener('click', toggledropdown, true);\n                });\n            }\n        });\n\n        // Add event listener for the 'hidden' event.\n        $(parentMenu).on('hidden.bs.dropdown', (e) => {\n\n            var dropdown = e.relatedTarget.parentNode.querySelector(Selectors.dropDownMenu);\n            var moreMenuCarousel = dropdown.nextElementSibling;\n            // Check if the next element of the dropdown menu is moremenu carousel.\n            if (moreMenuCarousel && moreMenuCarousel.classList.contains(Selectors.attr.moreMenuCarousel)\n                && moreMenuCarousel.querySelector(Selectors.dropDownMenu) !== null) {\n                // Hide the carousel dropdown menu.\n                moreMenuCarousel.querySelector(Selectors.dropDownMenu).classList.remove('show');\n                dropdown.classList.remove('hide-on-show'); // Remove the 'hide-on-show' class from the original dropdown menu.\n            }\n        });\n    });\n\n    /**\n     * Toggle the visiblity of the card menu.\n     *\n     * @param {event} e\n     */\n    const toggledropdown = e => {\n\n        const innerMenu = e.target.parentNode.querySelector(Selectors.roleMenu);\n\n        if (innerMenu) {\n            innerMenu.classList.toggle('show');\n\n\n            // Calculate and adjust the position of the card menu based on the dropdown menu's position.\n            if (innerMenu.classList.contains('show')) {\n                var dropDown = innerMenu.parentNode.closest(Selectors.dropDownMenu);\n                var rect = dropDown.getBoundingClientRect();\n                var right = document.scrollingElement.clientWidth - rect.right;\n\n                // Use the left section of the moremenu dropdown.\n                if (rect.left >= right) {\n                    innerMenu.style.width = rect.left + 'px';\n                    innerMenu.style.left = 0;\n                } else {\n                    // Use the right side of the moremenu dropdown.\n                    innerMenu.style.width = right + 'px';\n                    innerMenu.style.left = 'inherit';\n                    innerMenu.style.right = 0;\n                }\n            }\n        }\n        e.stopPropagation();\n    };\n};\n\n/**\n * Initialize the sub menus.\n */\nconst init = () => {\n\n    const smartMenus = document.querySelectorAll(Selectors.smartMenuCarouselClass);\n\n    // Registers event listeners to enable the submenu items carousel.\n    if (smartMenus !== undefined && smartMenus.length !== null) {\n        smartMenus.forEach((e) => registerEventListeners(e));\n    }\n\n    // Initializes the submenu carousel for the menus inside the more menu.\n    moreMenuItemCarousel();\n    // Registers event listeners for dropdown menu visibility changes to update the carousel menu.\n    registerMoreMenuCarouselDropdown();\n};\n\nexport default {\n    init: init,\n};\n"],"names":["Selectors","smartMenuCarousel","smartMenuCarouselClass","smartMenuCarouselItem","smartMenuCarouselItemActive","smartMenuCarouselNavigationLink","moreMenuCarouselDropdown","smartMenuDropDownItems","moreMenuCarousel","boostUnionMoreMenu","carouselItem","carouselMainItem","carouselInner","dropDownMenu","roleMenu","attr","smartMenuCarouselTargetAttr","smartMenuCarouselNavigationClass","region","dropDown","init","smartMenus","document","querySelectorAll","undefined","length","forEach","e","smartMenu","addEventListener","target","matches","carouselManagement","keyCode","space","enter","preventDefault","stopPropagation","targetedCarouselItemId","dataset","carouselTargetId","targetedCarouselItem","querySelector","index","Array","from","parentNode","children","indexOf","carousel","on","focus","registerEventListeners","window","onresize","createMoreMenuCarousel","primaryNav","carouselSubmenu","menuBar","moreMenu","items","classList","contains","remove","mainmenus","submenus","item","menuItem","cloneNode","el","cloned","push","hasAttribute","add","mainCarouselItem","childNodes","m","id","appendChild","sb","moreMenuItemCarousel","menu","parentMenu","dropdown","relatedTarget","nextElementSibling","cardMenu","removeEventListener","toggledropdown","innerMenu","toggle","rect","closest","getBoundingClientRect","right","scrollingElement","clientWidth","left","style","width","registerMoreMenuCarouselDropdown"],"mappings":"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"}