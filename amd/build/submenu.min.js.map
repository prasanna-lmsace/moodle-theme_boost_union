{"version":3,"file":"submenu.min.js","sources":["../src/submenu.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Theme Boost Union - JS code to initialize and handle events of the sub menus in smart menu.\n *\n * This AMD module is copied and modified from lib/amd/src/usermenu.js.\n *\n * @module     theme_boost_union/submenu\n * @copyright  2024 bdecent GmbH <https://bdecent.de>\n * @copyright  based on code from core/usermenu by Mihail Geshoski\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Carousel from 'theme_boost/bootstrap/carousel';\nimport {space, enter} from 'core/key_codes';\n\n/**\n * Smartmenu submenu constants.\n */\nconst Selectors = {\n    smartMenuCarousel: '[data-bs-toggle=\"smartmenu-carousel\"]',\n    smartMenuCarouselClass: '.theme-boost-union-smartmenu-carousel',\n    smartMenuCarouselItem: '[data-bs-toggle=\"smartmenu-carousel\"] .carousel-item',\n    smartMenuCarouselItemActive: '[data-bs-toggle=\"smartmenu-carousel\"] .carousel-item.active',\n    smartMenuCarouselNavigationLink: '[data-bs-toggle=\"smartmenu-carousel\"] .carousel-navigation-link',\n    smartMenuDropDownItems: 'ul.dropdown-menu li.nav-item',\n    dropDownMenu: '.dropdown-menu',\n    roleMenu: '[role=\"menu\"]',\n    attr: {\n        smartMenuCarouselTargetAttr: 'data-carousel-target-id',\n        smartMenuCarouselNavigationClass: 'carousel-navigation-link',\n    },\n    region: {\n        dropDown: '[data-region=\"moredropdown\"]'\n    }\n};\n\n/**\n * Register event listeners.\n *\n * @param {HTMLElement} smartMenu\n */\nconst registerEventListeners = (smartMenu) => {\n\n    const smartMenuCarousel = smartMenu.querySelector(Selectors.smartMenuCarousel);\n\n    // Handle click events in the smart menu.\n    smartMenu.addEventListener('click', (e) => {\n\n        // Handle click event on the carousel navigation (control) links in the smart menu.\n        if (e.target.matches(Selectors.smartMenuCarouselNavigationLink)) {\n            carouselManagement(e);\n        }\n\n    }, true);\n\n    smartMenu.addEventListener('keydown', e => {\n        // Handle keydown event on the carousel navigation (control) links in the smart menu.\n        if ((e.keyCode === space ||\n            e.keyCode === enter) &&\n            e.target.matches(Selectors.smartMenuCarouselNavigationLink)) {\n            e.preventDefault();\n            carouselManagement(e);\n        }\n    }, true);\n\n    /**\n     * We do the same actions here even if the caller was a click or button press.\n     *\n     * @param {Event} e The triggering element and key presses etc.\n     */\n    const carouselManagement = e => {\n\n        // By default the smart menu dropdown element closes on a click event. This behaviour is not desirable\n        // as we need to be able to navigate through the carousel items (submenus of the smart menu) within the\n        // smart menu. Therefore, we need to prevent the propagation of this event and then manually call the\n        // carousel transition.\n        e.stopPropagation();\n        // The id of the targeted carousel item.\n        const targetedCarouselItemId = e.target.dataset.carouselTargetId;\n        const targetedCarouselItem = smartMenu.querySelector('#' + targetedCarouselItemId);\n        // Get the position (index) of the targeted carousel item within the parent container element.\n        const index = Array.from(targetedCarouselItem.parentNode.children).indexOf(targetedCarouselItem);\n        // Navigate to the targeted carousel item.\n        // $(smartMenu.querySelector(Selectors.smartMenuCarousel)).carousel(index);\n        Carousel.getOrCreateInstance(smartMenuCarousel).to(index);\n\n    };\n\n    // Handle the 'hide.bs.dropdown' event (Fired when the dropdown menu is being closed).\n    smartMenu.addEventListener('hide.bs.dropdown', () => {\n        // Reset the state once the smart menu dropdown is closed and return back to the first (main) carousel item\n        // if necessary.\n        // $(smartMenu.querySelector(Selectors.smartMenuCarousel)).carousel(0);\n        Carousel.getOrCreateInstance(smartMenuCarousel).to(0);\n\n    });\n\n    // Handle the 'slid.bs.carousel' event (Fired when the carousel has completed its slide transition).\n    smartMenuCarousel?.addEventListener('slid.bs.carousel', () => {\n        const activeCarouselItem = smartMenu.querySelector(Selectors.smartMenuCarouselItemActive);\n        // Set the focus on the newly activated carousel item.\n        if (activeCarouselItem !== null) {\n            activeCarouselItem.focus();\n        }\n    });\n};\n\n/**\n * Sets up the visibility and positions of card menus inside the moremenu.\n */\nconst moreMenuCardItem = () => {\n\n    window.onresize = () => initMoreMenuCardItem();\n\n    /**\n     * Fetches the primary and menubar navigations moremenu and registers the card menu update.\n     */\n    const initMoreMenuCardItem = () => {\n        // Get the primary navigation more menu and initialize card menu update.\n        var primaryNav = document.querySelector('.primary-navigation ul.more-nav .dropdownmoremenu');\n        if (primaryNav !== null) { // Confirm the primary navigation exists.\n            registerMoreMenuCardItem(primaryNav);\n        }\n\n        // Get the menubar more menu and initialize card menu update.\n        var menuBar = document.querySelector('nav.menubar ul.more-nav .dropdownmoremenu');\n        if (menuBar !== null) { // Confirm the menubar exists.\n            registerMoreMenuCardItem(menuBar);\n        }\n    };\n\n    /**\n     * Registers the click event on the moremenu to update the menus width and position\n     * and the visibility of card menus inside the more menu.\n     *\n     * @param {HTMLElement} moreMenu The more menu element.\n     * @returns {void}\n     */\n    const registerMoreMenuCardItem = (moreMenu) => {\n\n        // Fetch the list of moved menu items from ul.dropdown-menu li.nav-items.\n        var items = moreMenu.querySelectorAll(Selectors.smartMenuDropDownItems);\n\n        if (items.length <= 0) {\n            return;\n        }\n\n        // Close the dropdown menu of the more menu to prevent faulty clicks on elements moved outside\n        // of the more menu during resizing.\n        var subMenuDropDownMenu = moreMenu.querySelectorAll(Selectors.dropDownMenu + ' ' + Selectors.dropDownMenu);\n        if (subMenuDropDownMenu !== null) {\n            Array.from(subMenuDropDownMenu).forEach((e) => e.classList.remove('show'));\n        }\n\n        // Hide the opened card menus when the carousel item is clicked.\n        moreMenu.removeEventListener('click', hideCardMenus, true);\n        moreMenu.addEventListener('click', hideCardMenus, true);\n\n        // Remove the width of card menus moved to outside from more menu.\n        if (moreMenu.parentNode.querySelectorAll('.dropdown.card-dropdown')) {\n            moreMenu.parentNode.querySelectorAll('.dropdown.card-dropdown').forEach((e) => {\n                var cardDropDown = e.querySelector(Selectors.dropDownMenu);\n                if (cardDropDown !== null) {\n                    cardDropDown.style.removeProperty('width');\n                    cardDropDown.style.removeProperty('left');\n                    cardDropDown.style.removeProperty('right');\n                }\n            });\n        }\n        // Parent moremenu.\n        var parentMenu = moreMenu.parentNode;\n        // Hide all opened card menus on dropdown shown.\n        parentMenu.addEventListener('shown.bs.dropdown', hideOpenMenus);\n        parentMenu.addEventListener('hidden.bs.dropdown', hideOpenMenus);\n    };\n\n    /**\n     * Hide all the opened card menus on dropdown shown.\n     * @param { Event } e The click event.\n     */\n    const hideOpenMenus = (e) => {\n        if (e.target.matches('.dropdownmoremenu')) {\n            var subMenuDropDownMenu = e.currentTarget.querySelectorAll(Selectors.dropDownMenu + ' ' + Selectors.dropDownMenu);\n            if (subMenuDropDownMenu !== null) {\n                Array.from(subMenuDropDownMenu).forEach((e) => e.classList.remove('show'));\n            }\n        }\n    };\n\n    /**\n     * Hides the opened card menus when a carousel item is clicked. Update the current active card menus position and width.\n     *\n     * @param { Event } e The click event.\n     * @returns { void}\n     */\n    const hideCardMenus = e => {\n        var moreMenu = e.target.closest(Selectors.region.dropDown);\n        if (moreMenu && moreMenu.querySelectorAll(Selectors.dropDownMenu)) {\n            moreMenu.querySelectorAll(Selectors.dropDownMenu).forEach((dropdownmenu) => {\n\n                // Hide the nav items other than this target and the carousel navigation links.\n                if (!e.target.isEqualNode(dropdownmenu.previousElementSibling)\n                    && !e.target.matches(Selectors.smartMenuCarouselNavigationLink)\n                    && e.target.matches('.dropdown-toggle.dropdown-item')) {\n                    dropdownmenu.classList.remove('show');\n                }\n                // If the target is a card dropdown link, then update the width of this card dropdown.\n                if (e.target.isEqualNode(dropdownmenu.previousElementSibling)\n                    && e.target.parentNode.matches('.dropdown.card-dropdown')) {\n                    updatePosition(e);\n                }\n            });\n        }\n    };\n\n    /**\n     * Update the position and width of the card menus inside the moremenu.\n     *\n     * @param {event} e\n     */\n    const updatePosition = e => {\n\n        const innerMenu = e.target.parentNode.querySelector(Selectors.roleMenu);\n\n        if (innerMenu) {\n            // Calculate and adjust the position of the card menu based on the dropdown menu's position.\n            var dropDown = innerMenu.parentNode.closest(Selectors.dropDownMenu);\n            var rect = dropDown.getBoundingClientRect();\n            var right = document.scrollingElement.clientWidth - rect.right;\n\n            // Use the left section of the moremenu dropdown.\n            if (rect.left >= right) {\n                innerMenu.style.width = rect.left + 'px';\n                innerMenu.style.left = 0;\n            } else {\n                // Use the right side of the moremenu dropdown.\n                innerMenu.style.width = right + 'px';\n                innerMenu.style.left = 'inherit';\n                innerMenu.style.right = 0;\n            }\n        }\n    };\n};\n\n/**\n * Initialize the sub menus.\n */\nconst init = () => {\n\n    const smartMenus = document.querySelectorAll(Selectors.smartMenuCarouselClass);\n\n    // Registers event listeners to enable the submenu items carousel.\n    if (smartMenus !== undefined && smartMenus.length !== null) {\n        smartMenus.forEach((e) => registerEventListeners(e));\n    }\n\n    // Calculate and setup the card menus width and positions inside the more menu.\n    moreMenuCardItem();\n};\n\nexport default {\n    init: init,\n};\n"],"names":["Selectors","dropDown","init","smartMenus","document","querySelectorAll","undefined","length","forEach","e","smartMenu","smartMenuCarousel","querySelector","addEventListener","target","matches","carouselManagement","keyCode","space","enter","preventDefault","stopPropagation","targetedCarouselItemId","dataset","carouselTargetId","targetedCarouselItem","index","Array","from","parentNode","children","indexOf","getOrCreateInstance","to","activeCarouselItem","focus","registerEventListeners","window","onresize","initMoreMenuCardItem","primaryNav","registerMoreMenuCardItem","menuBar","moreMenu","subMenuDropDownMenu","classList","remove","removeEventListener","hideCardMenus","cardDropDown","style","removeProperty","parentMenu","hideOpenMenus","currentTarget","closest","dropdownmenu","isEqualNode","previousElementSibling","updatePosition","innerMenu","rect","getBoundingClientRect","right","scrollingElement","clientWidth","left","width","moreMenuCardItem"],"mappings":"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"}