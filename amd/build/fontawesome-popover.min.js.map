{"version":3,"file":"fontawesome-popover.min.js","sources":["../src/fontawesome-popover.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Shows the footer content in a popover. Modified version of theme_boost\\footer-popover by Bas Brands\n *\n * @module     theme_boost_union/fontawesome-popover\n * @copyright  bdecent GmbH 2023\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'theme_boost/popover', 'core/fragment'], function($, popover, Fragment) {\n\n    const SELECTORS = {\n        PICKERCONTAINER: '.fontawesome-iconpicker-popover',\n        PICKERCONTENT: '[data-region=\"icons-list\"]',\n    };\n\n    var contextID;\n\n    let pickerIsShown = false;\n\n    var SELECTBOX;\n\n    /**\n     * Get the footer content for popover.\n     *\n     * @returns {String} HTML string\n     * @private\n     */\n    const getIconList = () => {\n        return Fragment.loadFragment('theme_boost_union', 'icons_list', contextID, {});\n    };\n\n    /**\n     * Filter the icons in list with values user entered in search input.\n     * Given input will contain the text in both aria-value and aria-label.\n     * Ex. \"core:t\\document\" is aira value and \"fa-document\" is aria-label.\n     *\n     * @param {Element} target\n     * @returns\n     */\n    const filterIcons = (target) => {\n        var filter = target.value.toLowerCase();\n        var ul = document.querySelector('.fontawesome-iconpicker-popover ul.fontawesome-icon-suggestions');\n        if (ul === undefined || ul === null) {\n            return;\n        }\n        var li = ul.querySelectorAll('li');\n\n        for (i = 0; i < li.length; i++) {\n            var value = li[i].getAttribute('aria-value');\n            var label = li[i].getAttribute('aria-label');\n            if (!value.toLowerCase().includes(filter) && !label.toLowerCase().includes(filter)) {\n                li[i].style.display = \"none\";\n            }\n            else {\n                li[i].style.display = \"inline-block\";\n            }\n        }\n    }\n\n    /**\n     * Creates input element and append the element into the target elements parentnode.\n     * USer can able to search icons using this input field\n     *\n     * @param {String} target Element Selector.\n     */\n    const createElements = (target) => {\n\n        var input = document.createElement('input');\n        input.setAttribute('type', 'text');\n        input.classList.add('fontawesome-autocomplete');\n        input.classList.add('form-control');\n\n        if (SELECTBOX.value != '') {\n            input.value = SELECTBOX.querySelector('option[selected]') !== null ? SELECTBOX.querySelector('option[selected]').text : '';\n        }\n\n        var wrapper = document.createElement('div');\n        wrapper.classList.add(\"fontawesome-picker-container\");\n        wrapper.append(input);\n\n        document.querySelector(target).style.display = 'none';\n        document.querySelector(target).parentNode.append(wrapper);\n    }\n\n    /**\n     * Update the target with fontawesome iconpicker.\n     *\n     * Create picker input field for search icons insert to dom, Fetch the icons list and setup the popover with icons content.\n     * Display the popover when the icon search input field is focused or clicked. This way user can view the list of icons,\n     * Search icons. when the icons is selected, same icon in the select element will selected.\n     *\n     * @param {String} target Element Selector.\n     * @returns\n     */\n    const IconPicker = (target) => {\n\n        SELECTBOX = document.querySelector(target);\n\n        if (SELECTBOX === undefined || SELECTBOX === null) {\n            return;\n        }\n\n        // Create input element and insert for search icons and hide the current target select box.\n        createElements(target);\n\n        // Parent of the target element.\n        var selectBoxParent = document.querySelector(target).parentNode;\n        // Input element for search icons, appended in createElements method.\n        const pickerInput = selectBoxParent.querySelector(\"input.fontawesome-autocomplete\");\n\n        // Check the search input created and inserted in dom.\n        if (pickerInput === undefined || pickerInput === null) {\n            setTimeout(() => IconPicker(target), 1000);\n            return;\n        }\n\n        // Fetch the icons list, and setup popover with iconslist.\n        getIconList().then(function(html, js) {\n\n            $(pickerInput).popover({\n                content: html,\n                // container: container,\n                html: true,\n                placement: 'bottom',\n                customClass: 'fontawesome-picker',\n                trigger: 'click'\n            });\n\n            // Event observer when the popover is inserted in dom, create eventlistner for each icons in icons list.\n            // Icon is clicked, set the icon aria-value as value for select box.\n            // Set the icon label to value of autocompletd picker.\n            $(pickerInput).on('inserted.bs.popover', function() {\n                var ul = document.querySelector('.fontawesome-iconpicker-popover ul.fontawesome-icon-suggestions');\n                ul.querySelectorAll('li').forEach((li) => {\n                    li.addEventListener('click', (e) => {\n                        var target = e.target.closest('li');\n                        var value = target.getAttribute('aria-value');\n                        var label = target.getAttribute('aria-label');\n                        pickerInput.value = label;\n                        SELECTBOX.value = value;\n                        $(pickerInput).popover('hide');\n                    })\n                });\n            });\n        })\n\n        document.addEventListener('click', e => {\n            if (pickerIsShown && !e.target.closest(SELECTORS.PICKERCONTAINER)) {\n                $(pickerInput).popover('hide');\n            }\n        },\n        true);\n\n        document.addEventListener('keydown', e => {\n            if (pickerIsShown && e.key === 'Escape') {\n                $(pickerInput).popover('hide');\n                pickerInput.focus();\n            }\n        });\n\n        document.addEventListener('focus', e => {\n            if (pickerIsShown && !e.target.closest(SELECTORS.PICKERCONTAINER)) {\n                $(pickerInput).popover('hide');\n            }\n        },\n        true);\n\n        $(pickerInput).on('shown.bs.popover', () => {\n            pickerIsShown = true;\n            // Add class to selected icon, helps to differenciate.\n            if (pickerInput.value != '') {\n                var iconSuggestion = document.querySelector('.fontawesome-iconpicker-popover ul.fontawesome-icon-suggestions')\n                if (iconSuggestion.querySelector('li[aria-label=\"'+pickerInput.value+'\"]') !== null) {\n                    // Remove selected class.\n                    iconSuggestion.querySelectorAll('li').forEach((li) => li.classList.remove('selected'));\n                    // Assign selected class for new.\n                    iconSuggestion.querySelector('li[aria-label=\"'+pickerInput.value+'\"]').classList.add('selected');\n                }\n            }\n        });\n\n        $(pickerInput).on('hide.bs.popover', () => {\n            pickerIsShown = false;\n        });\n\n        pickerInput.addEventListener('keyup', function(e) {\n            console.log(e.target);\n            filterIcons(e.target);\n        });\n    }\n\n    return {\n        init: (target, contextid) => {\n            contextID = contextid;\n            IconPicker(target);\n        }\n\n    };\n})\n"],"names":["define","$","popover","Fragment","SELECTORS","contextID","pickerIsShown","SELECTBOX","IconPicker","target","document","querySelector","input","createElement","setAttribute","classList","add","value","text","wrapper","append","style","display","parentNode","createElements","pickerInput","loadFragment","then","html","js","content","placement","customClass","trigger","on","querySelectorAll","forEach","li","addEventListener","e","closest","getAttribute","label","key","focus","iconSuggestion","remove","console","log","filter","toLowerCase","ul","i","length","includes","filterIcons","setTimeout","init","contextid"],"mappings":"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"}