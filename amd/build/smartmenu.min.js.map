{"version":3,"file":"smartmenu.min.js","sources":["../src/smartmenu.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Theme Boost Union - JS for smartmenu to make the third level submenu support.\r\n *\r\n * @module     theme_boost_union/smartmenu\r\n * @copyright  bdecent GmbH 2023\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n\r\n/**\r\n * Implement the second level of submenu support.\r\n * Find the submenus inside the dropdown add event listener for click event, on the click show the submenu list.\r\n */\r\nconst addSubmenu = () => {\r\n    // Fetch the list of submenus from moremenu.\r\n    var submenu = document.querySelectorAll('nav.moremenu .dropdown-submenu');\r\n    if (submenu !== null) {\r\n        submenu.forEach((item) => {\r\n            // Add event listener to show the submenu on click.\r\n            item.addEventListener('click', (e) => {\r\n                var target = e.currentTarget;\r\n                // Hide the shown menu.\r\n                hideSubmenus(target);\r\n                target.classList.toggle('show');\r\n                // Prevent the hide of parent menu.\r\n                e.stopPropagation();\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * Hide visible submenus before display new submenu.\r\n *\r\n * @param {Selector} target\r\n */\r\nconst hideSubmenus = (target) => {\r\n    var visibleMenu = document.querySelectorAll('nav.moremenu .dropdown-submenu.show');\r\n    if (visibleMenu !== null) {\r\n        visibleMenu.forEach((el) => {\r\n            if (el != target) {\r\n                el.classList.remove('show');\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * Make the no wrapped card menus scroll using swipe or drag.\r\n */\r\nconst cardScroll = () => {\r\n    var cards = document.querySelectorAll('.card-dropdown.card-overflow-no-wrap');\r\n    if (cards !== null) {\r\n        var scrollStart; // Verify the mouse is clicked and still in click not released.\r\n        var scrollMoved; // Prevent the click on scrolling.\r\n        let startPos, scrollPos;\r\n\r\n        cards.forEach((card) => {\r\n            var scrollElement = card.querySelector('.dropdown-menu');\r\n\r\n            scrollElement.addEventListener('mousedown', (e) => {\r\n                scrollStart = true;\r\n                var target = e.currentTarget.querySelector('.card-block-wrapper');\r\n                startPos = e.pageX;\r\n                scrollPos = target.scrollLeft;\r\n            });\r\n\r\n            scrollElement.addEventListener('mousemove', (e) => {\r\n                e.preventDefault();\r\n                if (!scrollStart) {\r\n                    return;\r\n                }\r\n                scrollMoved = true;\r\n                var target = e.currentTarget.querySelector('.card-block-wrapper');\r\n                const scroll = e.pageX - startPos;\r\n                target.scrollLeft = scrollPos - scroll;\r\n            });\r\n\r\n            scrollElement.addEventListener('click', (e) => {\r\n                if (scrollMoved) {\r\n                    e.preventDefault();\r\n                    scrollMoved = false;\r\n                }\r\n                e.stopPropagation();\r\n            });\r\n            scrollElement.addEventListener('mouseleave', () => {\r\n                scrollStart = false;\r\n                scrollMoved = false;\r\n            });\r\n            scrollElement.addEventListener('mouseup', () => {\r\n                scrollStart = false;\r\n            });\r\n       });\r\n    }\r\n};\r\n\r\nexport const init = () => {\r\n    addSubmenu();\r\n    cardScroll();\r\n};\r\n"],"names":["hideSubmenus","target","visibleMenu","document","querySelectorAll","forEach","el","classList","remove","submenu","item","addEventListener","e","currentTarget","toggle","stopPropagation","cards","scrollStart","scrollMoved","startPos","scrollPos","card","scrollElement","querySelector","pageX","scrollLeft","preventDefault","scroll","cardScroll"],"mappings":";;;;;;;;MAmDMA,aAAgBC,aACdC,YAAcC,SAASC,iBAAiB,uCACxB,OAAhBF,aACAA,YAAYG,SAASC,KACbA,IAAML,QACNK,GAAGC,UAAUC,OAAO,0BAuDhB,KAnFD,IAEXC,QACY,QADZA,QAAUN,SAASC,iBAAiB,oCAEpCK,QAAQJ,SAASK,OAEbA,KAAKC,iBAAiB,SAAUC,QACxBX,OAASW,EAAEC,cAEfb,aAAaC,QACbA,OAAOM,UAAUO,OAAO,QAExBF,EAAEG,wBAyBC,UACXC,MAAQb,SAASC,iBAAiB,2CACxB,OAAVY,MAAgB,KACZC,YACAC,gBACAC,SAAUC,UAEdJ,MAAMX,SAASgB,WACPC,cAAgBD,KAAKE,cAAc,kBAEvCD,cAAcX,iBAAiB,aAAcC,IACzCK,aAAc,MACVhB,OAASW,EAAEC,cAAcU,cAAc,uBAC3CJ,SAAWP,EAAEY,MACbJ,UAAYnB,OAAOwB,cAGvBH,cAAcX,iBAAiB,aAAcC,OACzCA,EAAEc,kBACGT,mBAGLC,aAAc,MACVjB,OAASW,EAAEC,cAAcU,cAAc,6BACrCI,OAASf,EAAEY,MAAQL,SACzBlB,OAAOwB,WAAaL,UAAYO,UAGpCL,cAAcX,iBAAiB,SAAUC,IACjCM,cACAN,EAAEc,iBACFR,aAAc,GAElBN,EAAEG,qBAENO,cAAcX,iBAAiB,cAAc,KACzCM,aAAc,EACdC,aAAc,KAElBI,cAAcX,iBAAiB,WAAW,KACtCM,aAAc,UAQ1BW"}